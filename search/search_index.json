{
    "docs": [
        {
            "location": "/",
            "text": "Set-Up\n\n\nWelcome to an \nIntroduction to Python with Telegram Bots\n. To begin, we must first set up the \npython programming language\n1\n2\n and the \npython-telegram-bot library\n. \nPlease complete these installation before the workshop.\n\n\nInstructions for Windows and macOS operating systems follow\n3\n. If you run into any problems, you may contact through telegram:\n\n\n\n\n@ningyuan\n\n\n\n\nWindows\n\n\n\n\nDownload and install python3 at https://www.python.org/downloads/release/python-364/. Choose Windows x86-64 executable installer, and just follow the instructions to install. \n\n\nDownload and install python-telegram-bot\n\n\n\n\nmacOS\n\n\n\n\nDownload and install python3\n\n\nDownload and install python-telegram-bot\n\n\n\n\n\n\n\n\n\n\n\n\nTo be more precise, this is the CPython \ninterpreter\n for the python programming language. This tells the computer how to 'make sense' of python code.\u00a0\n\u21a9\n\n\n\n\n\n\nWe are using Python 3, which is a version of python. Make sure that you're not getting Python 2!\u00a0\n\u21a9\n\n\n\n\n\n\nIf you're able to run an OS that is not Windows or macOS (\nABSOLUTELY PROPRIETARY\n), then I assume you can handle the installation by yourself.\u00a0\n\u21a9",
            "title": "Set-Up"
        },
        {
            "location": "/#set-up",
            "text": "Welcome to an  Introduction to Python with Telegram Bots . To begin, we must first set up the  python programming language 1 2  and the  python-telegram-bot library .  Please complete these installation before the workshop.  Instructions for Windows and macOS operating systems follow 3 . If you run into any problems, you may contact through telegram:   @ningyuan",
            "title": "Set-Up"
        },
        {
            "location": "/#windows",
            "text": "Download and install python3 at https://www.python.org/downloads/release/python-364/. Choose Windows x86-64 executable installer, and just follow the instructions to install.   Download and install python-telegram-bot",
            "title": "Windows"
        },
        {
            "location": "/#macos",
            "text": "Download and install python3  Download and install python-telegram-bot       To be more precise, this is the CPython  interpreter  for the python programming language. This tells the computer how to 'make sense' of python code.\u00a0 \u21a9    We are using Python 3, which is a version of python. Make sure that you're not getting Python 2!\u00a0 \u21a9    If you're able to run an OS that is not Windows or macOS ( ABSOLUTELY PROPRIETARY ), then I assume you can handle the installation by yourself.\u00a0 \u21a9",
            "title": "macOS"
        },
        {
            "location": "/01-basics/",
            "text": "Data Types, Operations, and Variables\n\n\nOne way to understand programming is as a process of \ntransforming\n data. A simple calculator performing addition is programmed, for example, to transform two numbers into one.\n\n\n\n\n\n\n\n\nIt is therefore necessary to consider,\n\n\n\n\nTypes of data\n\n\nOperations on data\n\n\nNaming of data\n\n\n\n\nData Types\n\n\nThere are many built-in data types in python\n1\n. For now, we need only focus on the following,\n\n\n\n\nIntegers (\nint\n)\n\n\nStrings (\nstr\n)\n\n\nBooleans (\nbool\n)\n\n\n\n\n\n\n\n\n\n\n\n\nFor the curious, see the \ndocs\n.\u00a0\n\u21a9",
            "title": "1. Data types, operations, variables"
        },
        {
            "location": "/01-basics/#data-types-operations-and-variables",
            "text": "One way to understand programming is as a process of  transforming  data. A simple calculator performing addition is programmed, for example, to transform two numbers into one.     It is therefore necessary to consider,   Types of data  Operations on data  Naming of data",
            "title": "Data Types, Operations, and Variables"
        },
        {
            "location": "/01-basics/#data-types",
            "text": "There are many built-in data types in python 1 . For now, we need only focus on the following,   Integers ( int )  Strings ( str )  Booleans ( bool )       For the curious, see the  docs .\u00a0 \u21a9",
            "title": "Data Types"
        },
        {
            "location": "/02-basics/",
            "text": "",
            "title": "2. Control flow"
        },
        {
            "location": "/03-basics/",
            "text": "",
            "title": "3. Loops"
        },
        {
            "location": "/04-basics/",
            "text": "def sum(x, y):\n    return x+y\n\n\n\n\nThis is a function. We use the keyword \"def\" to start off the function, followed by the name of the function (in this case, \"sum\"). \nWithin the brackets, we specify the parameters or inputs to the function. We use the keyword \"return\" to specify the outputs of the function.\n\n\nTo use a function, or perform what we call a function call, we could write:\n\n\na = sum(3,4)\n\n\n\n\nThis assigns the value of sum(3,4), which is 7, to the variable a. \n\n\nUnlike in maths, however, functions in python do not need to have inputs and outputs. So, this is also a valid function:\n\n\ndef sayhi():\n    print(\"hi\")\n\n\n\n\nFunctions are an important tool that allows us to organise our code and package sets of instructions which perform a specific task. \nOnce we have defined a function, we will be able to use it in multiple places. We can also use functions that other people have written in our code.\n\n\n//give example",
            "title": "4. Functions"
        },
        {
            "location": "/05-basics/",
            "text": "A data structure is something we use to store values. A list is an important in-built data structure in python, which we represent using square brackets:\n\n\nlist = [1,2,3,4,5]\n\n\n\n\nWe can access the contents of a list using indices, just like we did for strings. We can also find the length of the list using len. \n\n\nlist = [1,2,3,4,5]\nnumber = list[3] #number = 4\nlength = len(list) #length = 5\n\n\n\n\nLet's now try writing a function to find the average of the values in a list.\n\n\ndef average(list):\n    sum = 0\n    for x in list:\n        sum = sum + x\n    result = sum / len(list)\n    return result\n\n\n\n\nNow, try writing a function that will find you the largest value in a list. \n\n\nAnother useful data structure is called a dictionary.\n\n\ndictionary = {a : 1, b : 2, c : 3}\n\n\n\n\nA dictionary contains entries which are key-value pairs. In the example above, a : 1 is a key-value pair where a is the key and 1 is the value. Just like in a normal dictionary, we can lookup a dictionary to retrieve the corresponding value of a key as such:\n\n\ndic = {a : 1, b : 2, c : 3}\nnumber = dic[b] #number == 2\n\n\n\n\nWe can also add an entry to the dictionary as such:\n\n\ndic[d] = 4\n\n\n\n\nWe can also convert a dictionary into a list as such:\n\n\ndic = {a : 1, b : 2, c : 3}\nitems = dic.items()\n#items = [(a,1), (b,2), (c,3)]\n\n\n\n\nAfter using .items(), we have converted the dictionary into a list containing each entry in a tuple. A tuple using round brackets, and is like a list except that the values in the tuple cannot be changed. \nThis is useful if we want to loop through a dictionary, for example to find a particular key. Let's write a function that will take a dictionary, and give us a list of all the keys that have integer values that are greater than 3. \n\n\ndef findkeys(dic):\n    dic = dic.items()\n    result = []\n    for x in dic:\n        if x[1] > 3:\n            result = result + [x[0]]\n    return result\n\n\n\n\nLet's say we download some data off a website and get this dictionary. We want to find all the choices that don't have fish in the menu. Try writing that function yourself!\n\n\nmeals = {\n    'noodle'    :   'SEAFOOD IPOH HOR FUN',\n    'asian'     : '''WHITE & BROWN RICE\n                     SOY BRAISED CHICKEN WING X 2\n                     FISH IN PINEAPPLE SAUCE\n                     SCRAMBLED EGG W/ TOMATO SAUCE\n                     CHYE SIM W/ GARLIC\n                     CARROT & CORN SOUP''',\n    'western'   : '''CREAM OF CARROT\n                     ROASTED BEEF STEAK W/ HERB BROWN SAUCE\n                     MASHED POTATO\n                     MIXED BEANS & MUSHROOM''',\n    'indian'    : '''DAL\n                     PANEER KADAI\n                     CHANA MASLA\n                     VEG JALFREZZI\n                     CHICKEN MASALA\n                     TOMATO RICE''',\n    'malay'     : '''BAKED CHICKEN SERVED W/ MUSHROOM SAUCE\n                     WEDGES\n                     EGGPLANT W/ TOMATO PASTE''',\n    'vegetarian': '''STEAMED BEANCURD W/ MUSHROOM GRAVY\n                     SPRING ROLLS\n                     LO HAN CHAI\n                     STIR FRIED SWEET POTATO LEAVES'''\n}",
            "title": "5. Data structures"
        },
        {
            "location": "/06-bot/",
            "text": "",
            "title": "6. Installing packages"
        },
        {
            "location": "/07-bot/",
            "text": "",
            "title": "7. Sending messages"
        },
        {
            "location": "/08-bot/",
            "text": "",
            "title": "8. Reacting to messages"
        },
        {
            "location": "/09-bot/",
            "text": "",
            "title": "9. Sending commands"
        },
        {
            "location": "/10-bonus/",
            "text": "",
            "title": "10. How to Google"
        }
    ]
}